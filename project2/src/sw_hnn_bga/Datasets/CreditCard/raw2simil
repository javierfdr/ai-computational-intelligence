#!/tools/bin/perl
#
# Lutz Prechelt, 94/02/14
#
# Encodes 'card' raw data file into a training file.
#
# usage: raw2het inputfile >outputfile

while (<>) {
  @F = split (",");

  #1. NOMINAL (2)
  $v = $F[0];
  if ($v eq "?") {
    printf ("  X   ");
  }
  else {
      printf ("%3d ", "1 ") if ($v eq "a");
      printf ("%3d ", "2 ") if ($v eq "b");
  }

  #2. REAL 
  $v = $F[1];
  if ($v eq "?") {
    printf ("  X   ");
  }
  else { printf ("%7.3f ", $v); }

  #3. REAL 
  $v = $F[2];
  printf ("%7.3f ", $v);

  #4. NOMINAL (4)
  $v = $F[3];
  if ($v eq "?") {
    printf ("  X   ");
  }
  else {
      printf ("%3d ", "1 ") if ($v eq "u");
      printf ("%3d ", "2 ") if ($v eq "y");
      printf ("%3d ", "3 ") if ($v eq "l");
      printf ("%3d ", "4 ") if ($v eq "t");
  }

  #5. NOMINAL (3)
  $v = $F[4];
  if ($v eq "?") {
    printf ("  X   ");
  }
  else {
      printf ("%3d ", "1 ") if ($v eq "g");
      printf ("%3d ", "2 ") if ($v eq "p");
      printf ("%3d ", "3 ") if ($v eq "gg");
  }

  #6. NOMINAL (14)
  $v = $F[5];
  if ($v eq "?") {
    printf ("  X   ");
  }
  else {
      printf ("%3d ", "1  ") if ($v eq "c");
      printf ("%3d ", "2  ") if ($v eq "d");
      printf ("%3d ", "3  ") if ($v eq "cc");
      printf ("%3d ", "4  ") if ($v eq "i");
      printf ("%3d ", "5  ") if ($v eq "j");
      printf ("%3d ", "6  ") if ($v eq "k");
      printf ("%3d ", "7  ") if ($v eq "m");
      printf ("%3d ", "8  ") if ($v eq "r");
      printf ("%3d ", "9  ") if ($v eq "q");
      printf ("%3d ", "10 ") if ($v eq "w");
      printf ("%3d ", "11 ") if ($v eq "x");
      printf ("%3d ", "12 ") if ($v eq "e");
      printf ("%3d ", "13 ") if ($v eq "aa");
      printf ("%3d ", "14 ") if ($v eq "ff");
  }

  #7. NOMINAL (9)
  $v = $F[6];
  if ($v eq "?") {
    printf ("  X   ");
  }
  else {
      printf ("%3d ", "1 ") if ($v eq "v");
      printf ("%3d ", "2 ") if ($v eq "h");
      printf ("%3d ", "3 ") if ($v eq "bb");
      printf ("%3d ", "4 ") if ($v eq "j");
      printf ("%3d ", "5 ") if ($v eq "n");
      printf ("%3d ", "6 ") if ($v eq "z");
      printf ("%3d ", "7 ") if ($v eq "dd");
      printf ("%3d ", "8 ") if ($v eq "ff");
      printf ("%3d ", "9 ") if ($v eq "o");
  }

  #8. REAL
  $v = $F[7];
  printf ("%7.3f ", $v);

  #9. BINARY
  $v = $F[8];
  if ($v eq "?") {
    printf ("  X   ");
  }
  else {
      printf ("%3d ", "1 ") if ($v eq "t");
      printf ("%3d ", "2 ") if ($v eq "f");
  }

  #10. BINARY
  $v = $F[9];
  if ($v eq "?") {
    printf ("  X   ");
  }
  else {
      printf ("%3d ", "1 ") if ($v eq "t");
      printf ("%3d ", "2 ") if ($v eq "f");
  }

  #11. REAL
  $v = $F[10];
  printf ("%7.3f ", $v);

  #12. BINARY
  $v = $F[11];
  if ($v eq "?") {
    printf ("  X   ");
  }
  else {
      printf ("%3d ", "1 ") if ($v eq "t");
      printf ("%3d ", "2 ") if ($v eq "f");
  }

  #13. NOMINAL (3)
  $v = $F[12];
  if ($v eq "?") {
    printf ("  X   ");
  }
  else {
      printf ("%3d ", "1 ") if ($v eq "g");
      printf ("%3d ", "2 ") if ($v eq "p");
      printf ("%3d ", "3 ") if ($v eq "s");
  }

  #14. REAL 
  $v = $F[13];
  if ($v eq "?") {
    printf ("  X   ");
  }
  else { printf ("%7.3f ", $v); }

  #15. REAL 
  $v = log ($F[14]+1);  #logarithmic from range 0...100000 to 0...1
  printf ("%7.3f ", $v);

  $v = $F[15];
  chop $v;
  printf ("%s\n", $v eq "+" ? "1 0" : "0 1");
}


