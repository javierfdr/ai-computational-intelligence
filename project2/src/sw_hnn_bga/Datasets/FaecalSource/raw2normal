#!/tools/bin/perl
#
# Problem: Annealing
# Encodes raw data file into a training file for normal networks
#
# usage: raw2cod inputfile >outputfile

#OJO: luego habrá que ver qué columnas son todo 0 y quitarlas de aqui (no X)

while (<>) {
  @F = split; 

  $v = $F[0];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[1];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[2];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[3];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[4];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[5];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[6];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[7];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[8];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[9];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[10];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[11];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[12];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[13];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[14];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[15];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[16];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[17];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[18];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[19];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[20];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[21];  # CONTINUOUS
  if ($v eq "?") {
      printf ("0 1 ");
  }
  else { printf ("%7.3f 0 ", $v); }

  $v = $F[22];  # OUTPUT
  chop $v;
  printf ("%s\n", $v eq "1" ? "1 0" : "0 1");

}
